<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.chenlin.dp.modules.biz.employee.dao.EmployeeMapper">
	
	<select id="listForPage" resultType="net.chenlin.dp.modules.biz.employee.entity.EmployeeEntity">
		SELECT
		employee.`id` id,
		employee.`create_date` createDate,
		employee.`modify_date` modifyDate,
		employee.`invite_code` inviteCode,
		employee.`member_id` memberId,
		employee.`member_uuid` member_uuid,
		employee.`name` name,
		employee.`ip_white` ipWhite,
		employee.`org_id` orgId,
		employee.`user_status` userStatus,
		member.`nick_name` nickName,
		member.`username` username,
		member.`last_login_ip` lastLoginIp
		FROM
			employee
		inner join member on member.`member_id` = employee.`member_id` and member.`org_id` = employee.`org_id`
		where
		1=1
		<if test="id != null"> and `id` = #{id} </if>
		<if test="createDate != null"> and `create_date` = #{createDate} </if>
		<if test="modifyDate != null"> and `modify_date` = #{modifyDate} </if>
		<if test="inviteCode != null"> and `invite_code` = #{inviteCode} </if>
		<if test="memberId != null"> and `member_id` = #{memberId} </if>
		<if test="memberUuid != null"> and `member_uuid` = #{memberUuid} </if>
		<if test="name != null"> and `name` = #{name} </if>
		<if test="org_id != null"> and employee.org_id = #{orgId} </if>
		<if test="ipWhite != null"> and `ip_white` = #{ipWhite} </if>
		<if test="username != null"> and member.username = #{username} </if>
		<if test="nickName != null"> and member.nickName like  concat('%',#{nickName},'%') </if>
		ORDER BY
		employee.`create_date` DESC
	</select>
	
	<insert id="save">
		INSERT INTO employee (
			`id`, 
			`create_date` createDate, 
			`modify_date` modifyDate, 
			`invite_code` inviteCode, 
			`member_id` memberId, 
			`member_uuid` memberUuid, 
			`name`,
			`ip_white` ipWhite,
			`user_status` userStatus,
			`org_id` orgId
		)
		VALUES (
			#{id}, 
			#{createDate}, 
			#{modifyDate}, 
			#{inviteCode}, 
			#{memberId}, 
			#{memberUuid}, 
			#{name},
			#{ipWhite},
			#{userStatus},
			#{orgId}
		)
	</insert>
	
	<select id="getObjectById" resultType="net.chenlin.dp.modules.biz.employee.entity.EmployeeEntity">
		SELECT
			`id`, 
			`create_date` createDate, 
			`modify_date` modifyDate, 
			`invite_code` inviteCode, 
			`member_id` memberId, 
			`member_uuid` memberUuid, 
			`name`,
			`ip_white` ipWhite,
			`user_status` userStatus,
			`org_id` orgId
		FROM
			employee
		WHERE
			id = #{id}
	</select>

	<select id="getMemberUUID" resultType="net.chenlin.dp.modules.biz.employee.entity.EmployeeEntity">
		SELECT
			`id`,
			`create_date` createDate,
			`modify_date` modifyDate,
			`invite_code` inviteCode,
			`member_id` memberId,
			`member_uuid` memberUuid,
			`name`,
			`ip_white` ipWhite,
			`user_status` userStatus,
			`org_id` orgId
		FROM
			employee
		WHERE
			member_uuid = #{memberUuid}
	</select>

	<select id="getByMemberId" resultType="net.chenlin.dp.modules.biz.employee.entity.EmployeeEntity">
		SELECT
			`id`,
			`create_date` createDate,
			`modify_date` modifyDate,
			`invite_code` inviteCode,
			`member_id` memberId,
			`member_uuid` memberUuid,
			`name`,
			`ip_white` ipWhite,
			`user_status` userStatus,
			`org_id` orgId
		FROM
			employee
		WHERE
			member_id = #{memberId}
	</select>
	
	<update id="update">
		UPDATE employee
	 	<set>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="modifyDate != null">`modify_date` = #{modifyDate}, </if>
			<if test="inviteCode != null">`invite_code` = #{inviteCode}, </if>
			<if test="memberId != null">`member_id` = #{memberId}, </if>
			<if test="memberUuid != null">`member_uuid` = #{memberUuid}, </if>
			<if test="name != null">`name` = #{name},</if>
			<if test="ipWhite != null">`ip_white` = #{ipWhite},</if>
			<if test="userStatus != null">`user_status` = #{userStatus},</if>
		</set>
		WHERE
			id = #{id}
	</update>
	
	<delete id="batchRemove">
		DELETE
		FROM
			employee
		WHERE
			id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<update id="updateEmployeeEnable">
		UPDATE
		employee
		<set>
			<if test="userStatus != null">`user_status` = #{userStatus},</if>
		</set>
		WHERE
		id = #{id}
	</update>

	<update id="bindIP">
		UPDATE employee
		<set>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="modifyDate != null">`modify_date` = #{modifyDate}, </if>
			<if test="ipWhite != null">`ip_white` = #{ipWhite},</if>
		</set>
		WHERE
		member_id = #{memberId} and org_id = #{orgId}
	</update>

</mapper>