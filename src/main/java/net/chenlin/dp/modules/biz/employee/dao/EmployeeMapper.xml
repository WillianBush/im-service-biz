<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.chenlin.dp.modules.biz.employee.dao.EmployeeMapper">
	
	<select id="listForPage" resultType="net.chenlin.dp.modules.biz.employee.entity.EmployeeEntity">
		SELECT
			`id`, 
			`createDate`, 
			`modifyDate`, 
			`inviteCode`, 
			`member_id`, 
			`member_uuid`, 
			`name`
		FROM
			employee
		where
		1=1
		<if test="id != null"> and `id` = #{id} </if>
		<if test="createdate != null"> and `createDate` = #{createdate} </if>
		<if test="modifydate != null"> and `modifyDate` = #{modifydate} </if>
		<if test="invitecode != null"> and `inviteCode` = #{invitecode} </if>
		<if test="member_Id != null"> and `member_id` = #{member_Id} </if>
		<if test="member_Uuid != null"> and `member_uuid` = #{member_Uuid} </if>
		<if test="name != null"> and `name` = #{name} </if>
		ORDER BY
			id DESC
	</select>
	
	<insert id="save">
		INSERT INTO employee (
			`id`, 
			`createDate`, 
			`modifyDate`, 
			`inviteCode`, 
			`member_id`, 
			`member_uuid`, 
			`name`
		)
		VALUES (
			#{id}, 
			#{createdate}, 
			#{modifydate}, 
			#{invitecode}, 
			#{member_Id}, 
			#{member_Uuid}, 
			#{name}
		)
	</insert>
	
	<select id="getObjectById" resultType="net.chenlin.dp.modules.biz.employee.entity.EmployeeEntity">
		SELECT
			`id`, 
			`createDate`, 
			`modifyDate`, 
			`inviteCode`, 
			`member_id`, 
			`member_uuid`, 
			`name`
		FROM
			employee
		WHERE
			id = #{id}
	</select>
	
	<update id="update">
		UPDATE employee
	 	<set>
			<if test="createdate != null">`createDate` = #{createdate}, </if>
			<if test="modifydate != null">`modifyDate` = #{modifydate}, </if>
			<if test="invitecode != null">`inviteCode` = #{invitecode}, </if>
			<if test="member_Id != null">`member_id` = #{member_Id}, </if>
			<if test="member_Uuid != null">`member_uuid` = #{member_Uuid}, </if>
			<if test="name != null">`name` = #{name}</if>
		</set>
		WHERE
			id = #{id}
	</update>
	
	<delete id="batchRemove">
		DELETE
		FROM
			employee
		WHERE
			id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>