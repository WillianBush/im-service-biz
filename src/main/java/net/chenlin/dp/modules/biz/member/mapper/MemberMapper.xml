<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.chenlin.dp.modules.biz.member.dao.MemberMapper">
	
	<select id="listForPage" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
		SELECT
			`id`, 
			`create_date` createDate,
			`modify_date` modifyDate,
			`headpic`, 
			`last_login_date` lastLoginDate,
			`last_login_ip` lastLoginIp,
			`money`, 
			`nick_name` nickName, 
			`parent`, 
			`parent_path` parentPath, 
			`password`, 
			`regist_ip` registIp, 
			`status`, 
			`telephone`,
			`member_id` memberId,
			`username`,
			`qr_code_img` qrCodeImg, 
			`member_type` memberType,
			`parentmid`, 
			`wx_open_id` wxOpenId,
			`qq_open_id` qqOpenId, 
			`sex`, 
			`shiming_status` shimingStatus,
			`sys_generate` sysGenerate,
			`org_id`
		FROM
			member
		where
		1=1
		<if test="id != null"> and `id` = #{id} </if>
		<if test="createdate != null"> and `create_date` = #{createdate} </if>
		<if test="modifydate != null"> and `modify_date` = #{modifydate} </if>
		<if test="headpic != null"> and `headpic` = #{headpic} </if>
		<if test="lastlogindate != null"> and `last_login_date` = #{lastlogindate} </if>
		<if test="lastloginip != null"> and `last_login_ip` = #{lastloginip} </if>
		<if test="money != null"> and `money` = #{money} </if>
		<if test="nickname != null"> and `nick_name` LIKE concat('%',#{nickname},'%') </if>
		<if test="parent != null"> and `parent` = #{parent} </if>
		<if test="parentpath != null"> and `parent_path` = #{parentpath} </if>
		<if test="password != null"> and `password` = #{password} </if>
		<if test="registip != null"> and `regist_ip` = #{registip} </if>
		<if test="status != null"> and `status` = #{status} </if>
		<if test="telephone != null"> and `telephone` = #{telephone} </if>
		<if test="memberid != null"> and `member_id` = #{memberid} </if>
		<if test="username != null"> and `username` = #{username} </if>
		<if test="qrcodeimg != null"> and `qr_code_img` = #{qrcodeimg} </if>
		<if test="membertype != null"> and `member_type` = #{membertype} </if>
		<if test="parentmid != null"> and `parentmid` = #{parentmid} </if>
		<if test="wxopenid != null"> and `wx_open_id` = #{wxopenid} </if>
		<if test="qqopenid != null"> and `qq_openid` = #{qqopenid} </if>
		<if test="sex != null"> and `sex` = #{sex} </if>
		<if test="shimingstatus != null"> and `shiming_status` = #{shimingstatus} </if>
		<if test="sysgenerate != null"> and `sys_generate` = #{sysgenerate} </if>
		<if test="org_id != null"> and `org_id` = #{org_id} </if>
		<if test="ids != null">
			<if test="ids.size()>0">
				and id in
				<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				</foreach>
			</if>
		</if>
		<if test="startTime != null and startTime.trim() != ''">
			AND create_date &gt;= #{startTime}
		</if>
		<if test="endTime != null and endTime.trim() != ''">
			AND create_date &lt; #{endTime}
		</if>
		ORDER BY
			create_date DESC
	</select>
	
	<insert id="save">
		INSERT INTO member (
			`id`, 
			`create_date` createDate,
			`modify_date` modifyDate,
			`headpic`, 
			`last_login_date` lastLoginDate,
			`last_login_ip` lastLoginIp,
			`money`, 
			`nick_name` nickName, 
			`parent`, 
			`parent_path` parentPath, 
			`password`, 
			`regist_ip` registIp, 
			`status`, 
			`telephone`,
			`member_id` memberId,
			`username`,
			`qr_code_img` qrCodeImg, 
			`member_type` memberType,
			`parentmid`, 
			`wx_open_id` wxOpenId,
			`qq_open_id` qqOpenId, 
			`sex`, 
			`shiming_status` shimingStatus,
			`sys_generate` sysGenerate
		)
		VALUES (
			#{id}, 
			#{createdate}, 
			#{modifydate}, 
			#{headpic}, 
			#{lastlogindate}, 
			#{lastloginip}, 
			#{money}, 
			#{nickname}, 
			#{parent}, 
			#{parentpath}, 
			#{password}, 
			#{registip}, 
			#{status}, 
			#{telephone},
			#{memberid},
			#{username},
			#{qrcodeimg}, 
			#{membertype},
			#{parentmid}, 
			#{wxopenid},
			#{qqopenid}, 
			#{sex}, 
			#{shimingstatus},
			#{sysgenerate}
		)
	</insert>
	
	<select id="getObjectById" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
		SELECT
			`id`, 
			`create_date` createDate,
			`modify_date` modifyDate,
			`headpic`, 
			`last_login_date` lastLoginDate,
			`last_login_ip` lastLoginIp,
			`money`, 
			`nick_name` nickName, 
			`parent`, 
			`parent_path` parentPath, 
			`password`, 
			`regist_ip` registIp, 
			`status`, 
			`telephone`,
			`member_id` memberId,
			`username`,
			`qr_code_img` qrCodeImg, 
			`member_type` memberType,
			`parentmid`, 
			`wx_open_id` wxOpenId,
			`qq_open_id` qqOpenId, 
			`sex`, 
			`shiming_status` shimingStatus,
			`sys_generate` sysGenerate,
			`org_id`
		FROM
			member
		WHERE
			id = #{id}
	</select>


	<select id="getByUsername" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
		SELECT
			`id`,
			`create_date` createDate,
			`modify_date` modifyDate,
			`headpic`,
			`last_login_date`,
			`last_login_ip`,
			`money`,
			`nick_name` nickName,
			`parent`,
			`parent_path` parentPath,
			`password`,
			`regist_ip` registIp,
			`status`,
			`telephone`,
			`member_id` memberId,
			`username`,
			`qr_code_img` qrCodeImg,
			`member_type` memberType,
			`parentmid`,
			`wx_open_id` wxOpenId,
			`qq_open_id` qqOpenId,
			`sex`,
			`shiming_status` shimingStatus,
			`sys_generate` sysGenerate,
			`org_id`
		FROM
			member
		WHERE
			username = #{username}
	</select>
	
	<update id="update">
		UPDATE member
	 	<set>
			<if test="createdate != null">`create_date` = #{createdate}, </if>
			<if test="modifydate != null">`modify_date` = #{modifydate}, </if>
			<if test="headpic != null">`headpic` = #{headpic}, </if>
			<if test="lastlogindate != null">`last_login_date` = #{lastlogindate}, </if>
			<if test="lastloginip != null">`last_login_ip` = #{lastloginip}, </if>
			<if test="money != null">`money` = #{money}, </if>
			<if test="nickname != null">`nick_name` = #{nickname}, </if>
			<if test="parent != null">`parent` = #{parent}, </if>
			<if test="parentpath != null">`parent_path` = #{parentpath}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="registip != null">`regist_ip` = #{registip}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="telephone != null">`telephone` = #{telephone}, </if>
			<if test="memberid != null">`member_id` = #{memberid}, </if>
			<if test="username != null">`username` = #{username}, </if>
			<if test="qrcodeimg != null">`qr_code_img` = #{qrcodeimg}, </if>
			<if test="membertype != null">`member_type` = #{membertype}, </if>
			<if test="parentmid != null">`parentmid` = #{parentmid}, </if>
			<if test="wxopenid != null">`wx_open_id` = #{wxopenid}, </if>
			<if test="qqopenid != null">`qq_openid` = #{qqopenid}, </if>
			<if test="sex != null">`sex` = #{sex}, </if>
			<if test="shimingstatus != null">`shiming_status` = #{shimingstatus}, </if>
			<if test="sysgenerate != null">`sys_generate` = #{sysgenerate}</if>
			<if test="org_id != null">`org_id` = #{org_id}</if>
		</set>
		WHERE
			id = #{id}
	</update>
	
	<delete id="batchRemove">
		DELETE
		FROM
			member
		WHERE
			id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>


	<select id="getByIds" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
		SELECT
		`id`,
		`create_date` createDate,
		`modify_date` modifyDate,
		`headpic`,
		`last_login_date`,
		`last_login_ip`,
		`money`,
		`nick_name` nickName,
		`parent`,
		`parent_path` parentPath,
		`password`,
		`regist_ip` registIp,
		`status`,
		`telephone`,
		`member_id` memberId,
		`username`,
		`qr_code_img` qrCodeImg,
		`member_type` memberType,
		`parentmid`,
		`wx_open_id` wxOpenId,
		`qq_open_id` qqOpenId,
		`sex`,
		`shiming_status` shimingStatus,
		`sys_generate` sysGenerate,
		`org_id` orgId
		FROM
		member
		WHERE
		id IN
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</select>

	<select id="getObjectGroupByDate" resultType="net.chenlin.dp.modules.biz.bussiness.entity.YyMRegisterDayEntity">
		SELECT date_format(create_date, '%Y-%m-%d') as create_time,
			   count(distinct member_id) as m_register_number
		FROM member
		where create_date &gt;=  str_to_date(#{startdate}, '%Y-%m-%d')
			and create_date &lt; date_add(str_to_date(#{enddate}, '%Y-%m-%d'),  INTERVAL 1 day)
			and member_type = 0
			and org_id = #{orgId}
		group by date_format(create_date, '%Y-%m-%d')
	</select>

	<select id="getFriendsByMid" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
		SELECT
			m.id,
		    nick_name,
			headpic
		from friends f inner join member m on f.friendid=m.id
		where f.mid = #{mid}
	</select>

	<select id="getMemberByMid" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
		SELECT
			m.id,
			member_id,
			nick_name,
			headpic,
		    username
		from member m
		where member_id = #{memberId}
	</select>


	<select id="getMemberByRoomIdForPage" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
		SELECT
			m.*
		FROM
		member m left join room_member rm on m.id=rm.member_id
		where
		rm.room_id=#{roomId} and org_id = #{orgId}
		<if test="nickName != null"> and `nick_name` like  concat('%',#{nickName},'%') </if>
		ORDER BY
		id DESC
	</select>

    <select id="listForPageByFriend" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
        SELECT
        m.*
        FROM
        friends f inner join member m on f.friendid=m.id
        where
        1=1
        <if test="mid != null"> and f.`mid` = #{mid} </if>
        <if test="orgId != null"> and f.`org_id` = #{orgId} </if>
		<if test="nickName != null"> and m.`nick_name` like  concat('%',#{nickName},'%') </if>
        ORDER BY
        id DESC
    </select>

	<select id="getTotal" resultType="java.lang.Long">
		SELECT
			count(1)
		FROM
			member
		where
			org_id = #{orgId}
	</select>

	<select id="getRobotList" resultType="net.chenlin.dp.modules.biz.member.entity.MemberEntity">
		select m.* from member m where not exists
			(select 1 from room_member rm where rm.room_id=#{roomId} and rm.member_id=m.id)
			and m.memberType=1
			limit ${count}
	</select>

	<select id="isExitByNickname" resultType="java.lang.Long">
		SELECT
			count(1)
		FROM
			member
		where
			nick_name = #{nickName}
	</select>
</mapper>